version: 2.1

orbs:
    vro: kohirens/version-release@1.0.5

parameters:
    ssh-finger:
        description: SSH fingerprint.
        type: string
        default: "3e:01:4a:ba:a7:78:bc:2c:e1:1b:01:71:d5:d7:78:87"

# Anchors
default-work-env: &default-work-env
    working_directory: ~/src
    docker:
        - image: docker:20.10.13-git
    resource_class: small

default-env-vars: &default-env-vars
    DH_IMG_REPO: "kohirens/circleci-go"
    DH_CONTAINER: "circle-go-node-1"

jobs:
    build-n-test:
        <<: *default-work-env
        environment:
            <<: *default-env-vars
        steps:
            - checkout
            - setup_remote_docker:
                  version: 20.10.11
            - run:
                  name: "Build Docker image"
                  command: |
                      docker build --rm --no-cache -t "${DH_IMG_REPO}" .
            - run:
                  name: "Test Docker image"
                  command: |
                      docker run -it --rm "${DH_IMG_REPO}" go version
                      docker run -it --rm "${DH_IMG_REPO}" git --version

    publish-image:
        <<: *default-work-env
        environment:
            <<: *default-env-vars
        steps:
            - attach_workspace: { at: '.' }
            - setup_remote_docker:
                  version: 20.10.11
            - run:
                  name: Push Docker image
                  command: |
                      if [ ! -f ./tagged.txt ]; then
                          echo "cannot publish a Docker image, release-tag file not found"
                          exit 1
                      fi
                      export BUILD_VER=$(cat "tagged.txt")
                      export DH_IMAGE="${DH_IMG_REPO}:${BUILD_VER}"
                      echo "${DH_PASS}" | docker login -u "${DH_USER}" --password-stdin
                      echo ""
                      echo ""
                      echo "Building ${DH_IMAGE}"
                      docker build --rm -t "${DH_IMAGE}" .
                      echo ""
                      echo ""
                      echo "Building ${DH_IMAGE}"
                      docker push "${DH_IMAGE}"
                      echo ""
                      echo ""
                      echo "Building ${DH_IMAGE}"
                      docker rmi "${DH_IMAGE}"

workflows:
    version: 2
    pre-release:
        jobs:
            - build-n-test:
                context: orb-publishing
                filters:
                    branches:
                        ignore: main

    tagged-release:
        jobs:
            - vro/publish-changelog: #publish-changelog
                  context: orb-publishing
                  filters:
                      branches:
                          only: main
                  pre-steps: [ checkout, attach_workspace: { at: '.' } ]
                  sshFinger: << pipeline.parameters.ssh-finger >>
            - vro/tag-and-release:
                  requires: [ vro/publish-changelog ]
                  context: orb-publishing
                  pre-steps: [ checkout, attach_workspace: { at: '.' } ]
            - publish-image:
                  requires: [ vro/tag-and-release ]
                  context: orb-publishing
