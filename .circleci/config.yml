version: 2.1

orbs:
    vr: kohirens/version-release@dev:alpha

# also see: https://circleci.com/docs/2.0/pipeline-variables/
parameters:
    ctx_docker:
        type: string
        default: "kohirens-automation-dockerhub"
    ctx_auto_release:
        type: string
        default: "kohirens-automation"
    ssh_finger:
        description: SSH fingerprint.
        type: string
        default: "3e:01:4a:ba:a7:78:bc:2c:e1:1b:01:71:d5:d7:78:87"
    triggered_by_bot:
        description: Trigger publishing a release tag workflow.
        type: boolean
        default: false
    triggered_flow:
        default: "workflow-selector"
        description: Workflow to be executed.
        type: string

# Anchors
default-work-env: &default-work-env
    working_directory: ~/src
    docker:
        - image: docker:20.10.13-git
    resource_class: small

default-env-vars: &default-env-vars
    DH_IMG_REPO: "kohirens/circleci-go"
    DH_CONTAINER: "circleci-go-node-1"
    DOCKER_BUILDKIT: 1

filter-semantic-tag: &filter-semantic-tag
    tags:
        only: /^v?\d+\.\d+\.\d+$/
    branches:
        ignore: /.*/

jobs:
    build-n-test:
        <<: *default-work-env
        environment:
            <<: *default-env-vars
        steps:
            - checkout
            - setup_remote_docker:
                  version: 20.10.11
            - run:
                  name: "Build Docker image"
                  command: |
                      docker build --rm --no-cache -t "${DH_IMG_REPO}" .
            - run:
                  name: "Test Docker image"
                  command: |
                      docker run -it --rm "${DH_IMG_REPO}" go version
                      docker run -it --rm "${DH_IMG_REPO}" git --version
                      docker run -it --rm "${DH_IMG_REPO}" docker --version

    publish-image:
        <<: *default-work-env
        environment:
            <<: *default-env-vars
        steps:
            - checkout
            - setup_remote_docker
            - run:
                  name: Push Docker image
                  command: |
                      echo "Publishing tag << pipeline.git.tag >>"
                      export BUILD_VER="<< pipeline.git.tag >>"
                      if [ -z "${BUILD_VER}" ]; then
                          echo "cannot publish a Docker image, release-tag is empty"
                          exit 1
                      fi
                      export DH_IMAGE="${DH_IMG_REPO}:${BUILD_VER}"
                      echo "${DH_PASS}" | docker login -u "${DH_USER}" --password-stdin
                      echo ""
                      echo ""
                      echo "Building ${DH_IMAGE}"
                      docker build --rm -t "${DH_IMAGE}" .
                      echo ""
                      echo ""
                      echo "Building ${DH_IMAGE}"
                      docker push "${DH_IMAGE}"
                      echo ""
                      echo ""
                      echo "Building ${DH_IMAGE}"
                      docker rmi "${DH_IMAGE}"

workflows:
    version: 2
    pre-release: # Run on all branches and PRs except main|auto-*
        jobs:
            - build-n-test:
                context: orb-publishing
                filters:
                    branches:
                        ignore: /main|auto-update-changelog/

    workflow-selector:
        when:
            and:
                - equal: ["workflow-selector", << pipeline.parameters.triggered_flow >>]
                - equal: [ main, << pipeline.git.branch >> ]
        jobs:
            - vr/workflow-selector:
                  context: << pipeline.parameters.ctx_auto_release >>
                  ssh_finger: << pipeline.parameters.ssh_finger >>

    publish-changelog:
        when:
            and:
                - equal: ["publish-changelog", << pipeline.parameters.triggered_flow >>]
        jobs:
            - vr/publish-changelog:
                  context: << pipeline.parameters.ctx_auto_release >>
                  ssh_finger: << pipeline.parameters.ssh_finger >>

    publish-release-tag:
        when:
            and:
                - equal: ["publish-release-tag", << pipeline.parameters.triggered_flow >>]
        jobs:
            - vr/tag-and-release:
                  context: << pipeline.parameters.ctx_auto_release >>

    on-tag-release: # Run only on release tags.
        jobs:
            - publish-image:
                context: << pipeline.parameters.ctx_docker >>
                filters:
                    <<: *filter-semantic-tag
